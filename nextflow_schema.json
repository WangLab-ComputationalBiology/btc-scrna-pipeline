{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/test/master/nextflow_schema.json",
    "title": "nf-core/test pipeline parameters",
    "description": "BTC scRNA Pipeline",
    "type": "object",
    "definitions": {
        "project_parameters": {
            "title": "Project parameters",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "sample_table": {
                    "type": "string",
                    "default": "./assets/test_sample_table.csv",
                    "description": "Path to sample table"
                },
                "meta_data": {
                    "type": "string",
                    "default": "./assets/test_meta_data.csv",
                    "fa_icon": "fas fa-address-card",
                    "description": "Path to meta-data"
                },
                "project_name": {
                    "type": "string",
                    "default": "Test",
                    "description": "Project name"
                },
                "cancer_type": {
                    "type": "string",
                    "default": "None",
                    "description": "Enter the cancer type"
                },
                "genome": {
                    "type": "string",
                    "description": "Genome ID",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details.",
                    "default": "GRCh38"
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                }
            }
        },
        "quality_control_parameters": {
            "title": "Quality Control parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "thr_estimate_n_cells": {
                    "type": "integer",
                    "default": 300,
                    "description": "Estimated number of cells"
                },
                "thr_mean_reads_per_cells": {
                    "type": "integer",
                    "default": 25000,
                    "description": "Mean reads per cell"
                },
                "thr_median_genes_per_cell": {
                    "type": "integer",
                    "default": 900,
                    "description": "Median genes per cell"
                },
                "thr_median_umi_per_cell": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Median UMI per cell"
                },
                "thr_n_feature_rna_min": {
                    "type": "integer",
                    "default": 300,
                    "description": "Minimum features per cell"
                },
                "thr_n_feature_rna_max": {
                    "type": "integer",
                    "default": 7500,
                    "description": "Maximum features per cell"
                },
                "thr_percent_mito": {
                    "type": "integer",
                    "default": 25,
                    "description": "Percentage of mitochondrial genes"
                },
                "thr_n_observed_cells": {
                    "type": "integer",
                    "default": 300,
                    "description": "Number of observed cells"
                }
            }
        },
        "normalization_parameters": {
            "title": "Normalization parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input_reduction_step": {
                    "type": "string",
                    "default": "None",
                    "description": "Internal pipeline parameter. Do not customize it.",
                    "hidden": true
                },
                "thr_n_features": {
                    "type": "integer",
                    "default": 2000,
                    "description": "Number features for FindVariableFeatures"
                }
            }
        },
        "clustering_parameters": {
            "title": "Clustering parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input_cluster_step": {
                    "type": "string",
                    "default": "None",
                    "description": "Internal pipeline parameter. Do not customize it.",
                    "hidden": true
                },
                "input_features_plot": {
                    "type": "string",
                    "default": "LYZ;CCL5;IL32;PTPRCAP;FCGR3A;PF4;PTPRC",
                    "description": "Genes to be displayed on Feature plot"
                },
                "input_integration_dimension": {
                    "type": "string",
                    "default": "auto",
                    "description": "Embeddings for Louvain clustering"
                },
                "input_group_plot": {
                    "type": "string",
                    "default": "source_name;Sort",
                    "description": "Meta-data columns for UMAP plot"
                },
                "thr_resolution": {
                    "type": "number",
                    "default": 0.25,
                    "description": "Resolution threshold"
                },
                "thr_proportion": {
                    "type": "number",
                    "default": 0.25,
                    "description": "Cell proportion for ROGUE calculation"
                }
            }
        },
        "stratification_parameters": {
            "title": "Stratification parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input_stratification_method": {
                    "type": "string",
                    "default": "infercnv_label",
                    "description": "Method to define stratification labels"
                },
                "thr_cluster_size": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Defining cluster size limit"
                },
                "thr_consensus_score": {
                    "type": "integer",
                    "default": 2,
                    "description": "Consensus score threshold (Beta)"
                }
            }
        },
        "cell_annotations_parameters": {
            "title": "Cell annotations parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input_cell_markers_db": {
                    "type": "string",
                    "default": "./assets/cell_markers_database.csv",
                    "description": "Path to cell annotation CSV file"
                },
                "input_annotation_level": {
                    "type": "string",
                    "default": "Major cells",
                    "description": "Define annotation level. Currently, only Major cells are available."
                }
            }
        },
        "batch_correction_parameters": {
            "title": "Batch correction parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input_batch_step": {
                    "type": "string",
                    "default": "None",
                    "description": "Internal pipeline parameter. Do not customize it.",
                    "hidden": true
                },
                "input_integration_method": {
                    "type": "string",
                    "default": "all",
                    "description": "Batch correction / Integration methods. Default (all)."
                },
                "input_target_variables": {
                    "type": "string",
                    "default": "batch",
                    "description": "Meta-data target variable for batch correction"
                }
            }
        },
        "batch_evaluation_parameters": {
            "title": "Batch Evaluation parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input_integration_evaluate": {
                    "type": "string",
                    "default": "all",
                    "description": "Define methods to be evaluated"
                },
                "thr_cell_proportion": {
                    "type": "number",
                    "default": 0.3,
                    "description": "Cell proportion for Batch evaluation"
                },
                "input_lisi_variables": {
                    "type": "string",
                    "default": "cLISI;iLISI",
                    "description": "Define LISI types for Density plot"
                },
                "input_auto_selection": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "description": "Internal pipeline parameter. Do not customize it."
                }
            }
        },
        "differential_expression_parameters": {
            "title": "Differential Expression parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input_deg_step": {
                    "type": "string",
                    "default": "None",
                    "description": "Internal pipeline parameter. Do not customize it.",
                    "hidden": true
                },
                "input_deg_method": {
                    "type": "string",
                    "default": "wilcox",
                    "description": "Define DEG method (check options at Seurat documentation)"
                },
                "input_top_deg": {
                    "type": "integer",
                    "default": 20,
                    "description": "Number of DEG to be displayed"
                },
                "thr_fold_change": {
                    "type": "number",
                    "default": 0.25,
                    "description": "Fold-change threshold"
                },
                "thr_min_percentage": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Minimum cell percentage per DEG"
                },
                "opt_hgv_filter": {
                    "type": "boolean",
                    "description": "Filtering only HGV genes (Optional)"
                }
            }
        },
        "meta_program_parameters": {
            "title": "Meta-program parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input_meta_step": {
                    "type": "string",
                    "default": "None",
                    "description": "Internal pipeline parameter. Do not customize it.",
                    "hidden": true
                },
                "input_meta_programs_db": {
                    "type": "string",
                    "default": "./assets/meta_programs_database.csv",
                    "description": "Path to meta-program CSV file"
                },
                "input_cell_category": {
                    "type": "string",
                    "default": "Malignant",
                    "description": "Meta-program cell category"
                },
                "input_heatmap_annotation": {
                    "type": "string",
                    "default": "source_name;seurat_clusters",
                    "description": "Meta-data columns to be displayed on heatmap"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/project_parameters"
        },
        {
            "$ref": "#/definitions/quality_control_parameters"
        },
        {
            "$ref": "#/definitions/normalization_parameters"
        },
        {
            "$ref": "#/definitions/clustering_parameters"
        },
        {
            "$ref": "#/definitions/stratification_parameters"
        },
        {
            "$ref": "#/definitions/cell_annotations_parameters"
        },
        {
            "$ref": "#/definitions/batch_correction_parameters"
        },
        {
            "$ref": "#/definitions/batch_evaluation_parameters"
        },
        {
            "$ref": "#/definitions/differential_expression_parameters"
        },
        {
            "$ref": "#/definitions/meta_program_parameters"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}